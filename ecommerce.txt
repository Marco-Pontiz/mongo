Para este desafio consistia lo siguiente...

Consigna: Utilizando Mongo Shell, crear una base de datos llamada ecommerce que contenga dos colecciones: mensajes y productos.

Para realizar esta parte, lo primero que hay que hacer es lo siguiente.

-Abrir MongoDB Compass y crear la base de datos
-Abrir la consola y poner mongosh
-show databases
-use ecommerce
-db.createCollection("mensajes")
-db.createCollection("productos")

1) Agregar 10 documentos con valores distintos a las colecciones mensajes y productos. El formato de los documentos debe estar en correspondencia con el que venimos utilizando en el entregable con base de datos MariaDB.

Agregamos 10 mensajes:

-db.mensajes.insert({usuarios: "Marco", mensaje: "Hola, ¿como estás?"})
-db.mensajes.insert({usuarios: "Alberto", mensaje: "Bien, ¿y vos?"})
//Toda las veces que quieras

Agregamos 10 productos

-db.productos.insert({nombre: "Iphone", precio: 499, stock: 20})
-db.productos.insert({nombre: "Notebook", precio: 360, stock: 25})
//y asi hasta llegar hasta los 10 productos

Listar todos los documentos en cada colección.

-db.productos.find()
-db.mensajes.find()

Realizar un CRUD sobre la colección de productos:

Agregar un producto más en la colección de productos
-db.productos.insertOne({codigo: "54966", descripcion: "SoundZ", foto: "http://7723", nombre: "Kneye", precio: 4099, stock: 11})

Realizar una consulta por nombre de producto específico:

Listar los productos con precio menor a 1000 pesos:
-db.productos.find({precio: {$lt: 1000}})

Listar los productos con precio entre los 1000 a 3000 pesos:
-db.productos.find({precio: {$in: [1000,3000]}})

Listar los productos con precio mayor a 3000 pesos:
-db.productos.find({precio: {$gt: 3000}})

Realizar una consulta que traiga sólo el nombre del tercer producto más barato.
-db.productos.find({}, {"nombre": 1, "_id": 0}).sort({precio: 1}).skip(2).limit(1)

Hacer una actualización sobre todos los productos, agregando el campo stock a todos ellos con un valor de 100.
-db.productos.updateMany({precio: {$gt: 0}}, {$set: {stock: 100}})

Cambiar el stock a cero de los productos con precios mayores a 4000 pesos.
-db.productos.updateMany({precio: {$gt: 4000}}, {$set: {stock: 0}})

Borrar los productos con precio menor a 1000 pesos.
-db.productos.deleteMany({precio: {$lt: 1000}})

Crear un usuario 'pepe' clave: 'asd456' que sólo pueda leer la base de datos ecommerce. Verificar que pepe no pueda cambiar la información.

-use admin
-db.createUser({user: "pepe", pwd: "asd456", roles: [{role: "read", db: "ecommerce"}]})

Verificar usuario

-mongosh -u 'pepe' -p